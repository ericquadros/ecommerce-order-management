services:
  kafka:
    image: wurstmeister/kafka:latest
    restart: on-failure
    ports:
      - 9092:9092  # Porta externa para conexão com Kafka
      - 9093:9093  # Porta interna para comunicação entre brokers
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_NUM_PARTITIONS=3
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes

      # Configuração dos listeners
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL  # Comunicação entre brokers

    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8090:8080"  # Kafka UI acessível na porta 8080 do host
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093  # Conecta ao Kafka pelo nome do serviço
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  db:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      SA_PASSWORD: "D3vP@ss!8"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - db-data-order-management:/var/opt/mssql/data
    ports:
      - "1433:1433"
        
  mockaco:
    image: natenho/mockaco
    container_name: mockaco-api
    ports:
      - "5055:5000"
    volumes:
      - ./tests/mocks/containerApiMocks:/app/Mocks
    environment:
      - MOCKS_DIR=/app/Mocks
    
volumes:
  db-data-order-management:      